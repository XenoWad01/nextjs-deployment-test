{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mc/Work/React_Marius_Learn/next-js-project-start/pages/index.js\",\n    _this = this;\n\nimport Head from \"next/head\";\n// this will not be part of the client side bundle as it's only used in getStaticProps()\n// NextJS is smarter than you and does this...\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n/**\nexport const getServerSideProps = async (context) => {\n  // this runs on the server always on the server after deployment aka on each request i guess\n  // again this code will not reach the client side so it's safe to do backend stuff\n  //\n  // !!!! ONLY USE WHEN U GOT DATA THAT CHANGES LIKE MULTIPLE TIMES A SECOND\n  // !!!! OR IF YOU NEED ACCESS TO THE REQUEST OBJECT FOR AUTH STUFF\n  // !!!! OTHERWISE getStaticProps is the much much faster option\n\n  const req = context.req;\n  const res = context.res;\n\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n  };\n};\n **/\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/mc/Work/React_Marius_Learn/next-js-project-start/pages/index.js"],"names":["Head","MeetupList","Fragment","HomePage","props","meetups"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACuC;AACvC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAPD;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA3BMF,Q;;AAyDN,eAAeA,QAAf","sourcesContent":["import Head from \"next/head\";\nimport { MongoClient } from \"mongodb\"; // this will not be part of the client side bundle as it's only used in getStaticProps()\n// NextJS is smarter than you and does this...\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\n\nconst HomePage = (props) => {\n  return (\n    <Fragment>\n      <Head></Head>\n      <MeetupList meetups={props.meetups} />\n    </Fragment>\n  );\n};\n\n/**\nexport const getServerSideProps = async (context) => {\n  // this runs on the server always on the server after deployment aka on each request i guess\n  // again this code will not reach the client side so it's safe to do backend stuff\n  //\n  // !!!! ONLY USE WHEN U GOT DATA THAT CHANGES LIKE MULTIPLE TIMES A SECOND\n  // !!!! OR IF YOU NEED ACCESS TO THE REQUEST OBJECT FOR AUTH STUFF\n  // !!!! OTHERWISE getStaticProps is the much much faster option\n\n  const req = context.req;\n  const res = context.res;\n\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n  };\n};\n **/\n\nexport const getStaticProps = async () => {\n  // this runs only in the build process it never reaches the client side, so you can do backend stuff\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mugurkek:mugurkekpassword01@cluster0.criol.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  //you always have to return an object like this\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1, // number of seconds before re-generation on the server, such that when the users update stuff in the database we update the pregenerated html\n  };\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}