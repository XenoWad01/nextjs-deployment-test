{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mc/Work/React_Marius_Learn/next-js-project-start/pages/[meetupId].js\",\n    _this = this;\n\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: props.id,\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/mc/Work/React_Marius_Learn/next-js-project-start/pages/[meetupId].js"],"names":["MeetupDetail","MeetupDetails","props","id","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,oCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,EAAE,EAAEA,KAAK,CAACC,EADZ;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACI,OAJjB;AAKE,IAAA,WAAW,EAAEJ,KAAK,CAACK;AALrB;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD;;KAAMN,a;;AAyDN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = (props) => {\n  return (\n    <MeetupDetail\n      id={props.id}\n      image={props.image}\n      title={props.title}\n      address={props.address}\n      description={props.description}\n    />\n  );\n};\n\nexport const getStaticPaths = async () => {\n  return {\n    fallback: false,\n    // fallback set to FALSE\n    // ---- means that if a user tries to access an id that doesent exists he gets a 404\n    // ---- aka it means you defined ALL the supported paths here\n    // fallback set to TRUE\n    // ---- means that --||-- the server will try to dynamically pre-generate it\n    // For example we have hundreds of pages and we maybe don't pre-generate all of them\n    // but only our most popular pages\n    paths: [\n      {\n        params: {\n          meetupId: \"m1\",\n        },\n      },\n      {\n        params: {\n          meetupId: \"m2\",\n        },\n      },\n    ],\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Notredame_Paris.JPG/1280px-Notredame_Paris.JPG\",\n        title: \"First Meetup\",\n        address: \"Some street 5, some city\",\n        description: \"this is a first meetup\",\n      },\n    },\n  };\n};\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}