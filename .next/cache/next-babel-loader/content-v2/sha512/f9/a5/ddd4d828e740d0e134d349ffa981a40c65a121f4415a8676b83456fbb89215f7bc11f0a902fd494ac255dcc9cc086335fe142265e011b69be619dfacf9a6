{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mc/Work/React_Marius_Learn/next-js-project-start/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Notredame_Paris.JPG/1024px-Notredame_Paris.JPG\",\n  address: \"Some address 5, 12345 Some City\",\n  description: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Notredame_Paris.JPG/1024px-Notredame_Paris.JPG\",\n  address: \"Some address 4, 12345 Some City\",\n  description: \"This is a second meetup!\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\nexport const getServerSideProps = async context => {\n  // this runs on the server always on the server after deployment aka on each request i guess\n  // again this code will not reach the client side so it's safe to do backend stuff\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    }\n  };\n};\n/**\nexport const getStaticProps = async () => {\n  // this runs only in the build process it never reaches the client side, so you can do backend stuff\n\n  //you always have to return an object like this\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n    revalidate: 1, // number of seconds before re-generation on the server, such that when the users update stuff in the database we update the pregenerated html\n  };\n};\n **/\n\nexport default HomePage;","map":{"version":3,"sources":["/home/mc/Work/React_Marius_Learn/next-js-project-start/pages/index.js"],"names":["MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getServerSideProps","context"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,0GAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,0GAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AACnD;AACA;AACA,SAAO;AACLH,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAER;AADJ;AADF,GAAP;AAKD,CARM;AASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeM,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"A First Meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Notredame_Paris.JPG/1024px-Notredame_Paris.JPG\",\n    address: \"Some address 5, 12345 Some City\",\n    description: \"This is a first meetup!\",\n  },\n  {\n    id: \"m2\",\n    title: \"A Second Meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Notredame_Paris.JPG/1024px-Notredame_Paris.JPG\",\n    address: \"Some address 4, 12345 Some City\",\n    description: \"This is a second meetup!\",\n  },\n];\n\nconst HomePage = (props) => {\n  return <MeetupList meetups={props.meetups} />;\n};\n\nexport const getServerSideProps = async (context) => {\n  // this runs on the server always on the server after deployment aka on each request i guess\n  // again this code will not reach the client side so it's safe to do backend stuff\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n  };\n};\n/**\nexport const getStaticProps = async () => {\n  // this runs only in the build process it never reaches the client side, so you can do backend stuff\n\n  //you always have to return an object like this\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n    revalidate: 1, // number of seconds before re-generation on the server, such that when the users update stuff in the database we update the pregenerated html\n  };\n};\n **/\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}